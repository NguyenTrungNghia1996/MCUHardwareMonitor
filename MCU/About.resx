<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        oacAAAAASUVORK5CYII=
</value>
  </data>
</root>